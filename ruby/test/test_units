#!/bin/bash

if [ $# -eq 0 ]; then
    echo 'You must specify at least one path to test.'
    exit 1
fi

set -ex

for UNIT_PATH; do
  if [ ! -d "$UNIT_PATH/lesson_1" ]; then
    echo "$UNIT_PATH does not appear to be a unit."
    exit 1
  fi

  # Run in a subshell so each iteration starts in the same dir
  (
  set -ex # Maybe this is inherited by the subshell?

  cp test_unit.rb "$UNIT_PATH/"
  cd "$UNIT_PATH"

  PROJECT="$(../../shared/project-name)_test"

  # Shut down and remove all containers so weâ€™re starting with a clean slate.
  docker-compose -p "$PROJECT" down

  # Start ZooKeeper and then the Kafka broker
  docker-compose -p "$PROJECT" up -d zookeeper
  sleep 1 # Wait for ZooKeeper to come up before starting the Kafka broker
  docker-compose -p "$PROJECT" up -d kafka
  sleep 3 # Wait for the Kafka broker to come up before proceeding with the test

  docker-compose -p "$PROJECT" build
  docker-compose -p "$PROJECT" run --rm unit ruby test_unit.rb

  GREEN='\033[0;32m'
  NC='\033[0m'
  echo -e "${GREEN}Unit passed!${NC}"

  docker-compose -p "$PROJECT" down
  )
done
